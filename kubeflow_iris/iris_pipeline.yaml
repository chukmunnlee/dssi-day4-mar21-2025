# PIPELINE DEFINITION
# Name: iris-pipeline
# Description: A simple pipeline for training Iris dataset
# Outputs:
#    Output: float
components:
  comp-load-data:
    executorLabel: exec-load-data
    outputDefinitions:
      artifacts:
        test_data:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
        train_data:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
  comp-predict:
    executorLabel: exec-predict
    inputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
        test_data:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      parameters:
        Output:
          parameterType: NUMBER_DOUBLE
  comp-train-model:
    executorLabel: exec-train-model
    inputDefinitions:
      artifacts:
        train_data:
          artifactType:
            schemaTitle: system.Artifact
            schemaVersion: 0.0.1
    outputDefinitions:
      artifacts:
        model:
          artifactType:
            schemaTitle: system.Model
            schemaVersion: 0.0.1
deploymentSpec:
  executors:
    exec-load-data:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - load_data
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'scikit-learn'\
          \ 'numpy' 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef load_data(train_data: dsl.OutputPath('train_data'), test_data:\
          \ dsl.OutputPath('test_data')):\n   # import the following package\n   from\
          \ sklearn.datasets import load_iris\n   from sklearn.model_selection import\
          \ train_test_split\n   import joblib\n\n   iris_data = load_iris()\n   X_data\
          \ = iris_data.get('data')\n   y_data = iris_data.get('target')\n\n   X_train,\
          \ X_test, y_train, y_test = train_test_split(X_data, y_data, test_size=.1)\n\
          \n   # write training data out\n   with open(train_data, \"wb\") as f:\n\
          \      joblib.dump( (X_train, y_train), f)\n\n   # write test data out \
          \  \n   with open(test_data, \"wb\") as f:\n      joblib.dump( (X_test,\
          \ y_test), f)\n\n"
        image: python:3.12
    exec-predict:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - predict
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'scikit-learn'\
          \ 'numpy' 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef predict(test_data: dsl.InputPath('test_data'), model: dsl.InputPath('model'))\
          \ -> float:\n\n   from sklearn import metrics \n   import joblib\n\n   #\
          \ Load the test data\n   with open(test_data, 'rb') as f:\n      X_test,\
          \ y_test = joblib.load(f)\n\n   # Load the model\n   with open(model, 'rb')\
          \ as f:\n      model = joblib.load(f)\n\n   y_prediction = model.predict(X_test)\n\
          \n   return metrics.accuracy_score(y_prediction, y_test)\n\n"
        image: python:3.12
    exec-train-model:
      container:
        args:
        - --executor_input
        - '{{$}}'
        - --function_to_execute
        - train_model
        command:
        - sh
        - -c
        - "\nif ! [ -x \"$(command -v pip)\" ]; then\n    python3 -m ensurepip ||\
          \ python3 -m ensurepip --user || apt-get install python3-pip\nfi\n\nPIP_DISABLE_PIP_VERSION_CHECK=1\
          \ python3 -m pip install --quiet --no-warn-script-location 'kfp==2.12.1'\
          \ '--no-deps' 'typing-extensions>=3.7.4,<5; python_version<\"3.9\"'  &&\
          \  python3 -m pip install --quiet --no-warn-script-location 'scikit-learn'\
          \ 'numpy' 'joblib' && \"$0\" \"$@\"\n"
        - sh
        - -ec
        - 'program_path=$(mktemp -d)


          printf "%s" "$0" > "$program_path/ephemeral_component.py"

          _KFP_RUNTIME=true python3 -m kfp.dsl.executor_main                         --component_module_path                         "$program_path/ephemeral_component.py"                         "$@"

          '
        - "\nimport kfp\nfrom kfp import dsl\nfrom kfp.dsl import *\nfrom typing import\
          \ *\n\ndef train_model(train_data: dsl.InputPath('train_data'), model: dsl.OutputPath('model')):\n\
          \   from sklearn import svm \n   import joblib\n\n   # Load training data\n\
          \   with open(train_data, \"rb\") as f:\n      X_train, y_train = joblib.load(f)\n\
          \n   # Create a model for training\n   svm_model = svm.SVC()\n   svm_model.fit(X_train,\
          \ y_train)\n\n   # Save svm_model\n   with open(model, 'wb') as f:\n   \
          \   joblib.dump(svm_model, f)\n\n"
        image: python:3.12
pipelineInfo:
  description: A simple pipeline for training Iris dataset
  name: iris-pipeline
root:
  dag:
    outputs:
      parameters:
        Output:
          valueFromParameter:
            outputParameterKey: Output
            producerSubtask: predict
    tasks:
      load-data:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-load-data
        taskInfo:
          name: load-data
      predict:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-predict
        dependentTasks:
        - load-data
        - train-model
        inputs:
          artifacts:
            model:
              taskOutputArtifact:
                outputArtifactKey: model
                producerTask: train-model
            test_data:
              taskOutputArtifact:
                outputArtifactKey: test_data
                producerTask: load-data
        taskInfo:
          name: predict
      train-model:
        cachingOptions:
          enableCache: true
        componentRef:
          name: comp-train-model
        dependentTasks:
        - load-data
        inputs:
          artifacts:
            train_data:
              taskOutputArtifact:
                outputArtifactKey: train_data
                producerTask: load-data
        taskInfo:
          name: train-model
  outputDefinitions:
    parameters:
      Output:
        parameterType: NUMBER_DOUBLE
schemaVersion: 2.1.0
sdkVersion: kfp-2.12.1
